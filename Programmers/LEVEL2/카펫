# 약수를 구한다음에, (x1,x2) x1 > x2일 때 가장 처음값?! 
def solution(brown, yellow):
    total = brown + yellow 
    result = []
    for i in range(1, total//2):
        if total % i == 0:
            first = i 
            second = total // i
            if first >= second:
                result.append([first,second])             
    return result[0]
        
        
정확성: 76.9
합계: 76.9 / 100.0

# TC = [x, y]
# TC 4,6,7을 통과하려면 (x-2)(y-2)==yellow를 검증해야 한다 

def solution(brown, yellow):
    total = brown + yellow 
    result = []
    for i in range(1, total//2):
        if total % i == 0:
            first = i 
            second = total // i
            if first >= second:
                if (first-2)*(second-2) == yellow:
                    result.append([first,second])             
    return result[0]

         
 ===========================================================
 
 12/27
 
 
 def solution(brown, yellow):
    answer = []
    # 약수의 갯수가 홀수면은 딱 가운데 
    # 짞수면은 (약수갯수 /2) + 1 
    number = brown + yellow 
    for i in range(1,number+1):
        if number % i == 0:
            answer.append([i, number//i])
    # ["EVEN" if n % 2 == 0 else "ODD"
    idx = [len(answer)//2+1 if len(answer) % 2 ==0 else len(answer)//2][0]
    if len(answer) % 2 ==0:
        return answer[idx-1]
    return answer[idx]

  

===========================================================
    
def solution(brown, yellow):
    '''
    area = brown + yewllow = width * height
    yellow = (width-2)(height-2)
    brown = area - yellow
    '''
    area = brown + yellow    
    answer = list()
    width = area - 1
    for w in range(width, 0, -1):
        if area % w !=0:
            continue
        h = area // w
        if yellow == (w-2) * (h-2) and brown == area - yellow:
            if w >=h:
                answer.insert(0,w)
                answer.insert(1,h)
    return answer
    
    


    
    
