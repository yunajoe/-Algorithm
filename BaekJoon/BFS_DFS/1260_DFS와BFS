
from collections import deque



def BFS(graph, visited, start_node):
    queue = deque()
    queue.append(start_node)  # 노드를 qeue에 넣어준다 
    visited[start_node] = True 


    while queue:
        current_node = queue.popleft()
        print(current_node, end=" ")

        for n in graph[current_node]:
            if not visited[n]:
                queue.append(n)
                visited[n] = True
      
                
        

if __name__ == "__main__":
    node, line , start_node = map(int, input().split())
    graphs = [[] for _ in range(node+1)] 

    for _ in range(line):
        n1, n2 = map(int, input().split())
        graphs[n1].append(n2)
        graphs[n2].append(n2)

    for i in range(len(graphs)):
        graphs[i].sort()

    
    visited_dfs = [False] * (line+1)
    DFS(graphs, visited_dfs, start_node)
    print()
    visited_bfs = [False] * (line+1)
    BFS(graphs, visited_bfs, start_node)

    

    

    
