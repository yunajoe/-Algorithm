# 적록색약 
# https://seongonion.tistory.com/70
from collections import deque 
import sys 

input = sys.stdin.readline
sys.setrecursionlimit(10**6)

n = int(input())
graph = [list(input()) for _ in range(n)] 
visited = list([False for _ in range(n)] for _ in range(n))

def bfs(x, y):  
    visited[x][y] = True 
    q = deque()     
    q.append([x,y]) 
    while q:  # q가 0이 아닌경우까지 돌림 
        x,y = q.popleft()
        move = [(0, 1), (0, -1), (1, 0), (-1, 0)]
        for dx, dy in move:
            nx = x + dx 
            ny = y + dy  
            if -1 <nx < n and -1 < ny< n: 
                if graph[nx][ny] == graph[x][y] and visited[nx][ny] == False:
                    visited[nx][ny] = True 
                    q.append([nx,ny])

# 색약 아닐 때  
cnt1 = 0 
for i in range(n):
    for j in range(n):
        if visited[i][j] == False: # if not visited[i][j]
            bfs(i,j)
            cnt1 += 1
print(cnt1, end=" ")
        


# # 색약 일 때 
cnt2=0  
# visited초기화
visited = list([False for _ in range(n)] for _ in range(n))
for i in range(n):
    for j in range(n):
        if graph[i][j] == 'R':
            graph[i][j] == 'G'


for i in range(n):
    for j in range(n):
        if visited[i][j] == False:
            bfs(i,j)
            cnt2 += 1
print(cnt2)
        
    



  


    


    
