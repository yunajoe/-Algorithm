
def func(m,n): 
    if m > n:  # m이 크니까
        n1 = m//2
        n2 = n*2         
    else:
        n1 = n//2
        n2 = m*2     
    return n2, n1
m,n = map(int,input().split()) 
answer1, answer2 = func(m,n)
print(answer1,answer2)


def func(m,n): 
    if m > n:  # m이 크니까
        m = m//2
        n = n*2         
    else:
        n = n//2
        m = m*2     
    return m, n
m,n = map(int,input().split()) 
answer1, answer2 = func(m,n)
print(answer1,answer2)

-------------------------------------

def func(m,n):
    for i in range(m, n+1):
        for n in range(1,10):
            print(i, "*", n,"=", i*n)
        print()
            
m, n = map(int,input().split())
func(m,n)


def func(n):
    print(f"== {n}dan ==")
    for i in range(1,10):         
        print(f"{n}*{i} = {n*i}")
    print()
a,b = map(int, input().split())
for n in range(min(a,b), max(a,b)+1):
    func(n)
    
-------------------------------------

# 함수 1 형성평가 1 ~ 5

words = ["first","second","third"]
def func(): 
    print(words[i])
    print("@"*10)
for i in range(3):
    func()
    
def print_10():
    print("@"*10)
words = ["first","second","third"]
for i in range(3):
    print(words[i])
    print_10()
    
--------------------------------------
def func():
    total=0
    for i in range(n+1):
        total = total + i 
    return total

    
n = int(input())
func()


total=0
def func():    
    for i in range(n+1):
        global total
        total = total + i 
    return total

    
n = int(input())
func()
--------------------------------------

def func():
    for i in range(1,n+1):
        for j in range(1,n+1):
            print(i*j, end=" ")
        print()
        
n = int(input())
func()
--------------------------------------
def func(n1,n2):
    if n1 > n2:
        answer = n1**2 - n2**2
    else:
        answer = n2**2 - n1**2
    return answer
    
a, b = map(int, input().split())
func(a,b)

def func(a,b):
    return max(a,b)**2-min(a,b)**2

a, b = map(int, input().split())
func(a,b)
--------------------------------------

