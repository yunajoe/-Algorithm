# how to solve?
1. 각각 명함들들의 크기를 구한다. 
1. w or h에서 가장 큰 수를 고른다. 
2. 그 큰수가 w(or h이면은) 나머지h 와 다 곱해봄 
3. 그 곱한수가 각각명함들의 크기보다 같거나 클 때, 가장 작은 수를 pick하면 됨  



def solution(sizes):
    answer = 0
    result = []  # 각각의 카드의 넓이가 담긴 array
    for size in sizes:
        w, h = size[0], size[1]
        result.append(w*h)   
        
    result2 =[]
    for size in sizes:  
        max_num  = 0 
        num, idx = max(size), size.index(max(size))
        result2.append([num, idx])         
   # return result2
    max_num = 0    
    for item in result2:
        num, idx = item[0], item[1]
        if max_num < num:
            max_num = num
    standard = [max_num, idx]
    
    area_result = []
    for size in sizes:
        max_num, max_idx = standard[0], standard[1]
        w, h = size[0], size[1]
        if max_idx == 0: # width
            area_result.append(max_num * h)       
        else:
            area_result.append(max_num * w)
    return min([area for area in area_result if area >= max(result)])
    
    # 합계: 30.0 / 100.0
    
    ===============================================================================      
    
    # 다른 사람풀이 
    
    def solution(sizes):
    answer = 0
    max_w, max_h = 0, 0 
    for i in range(len(sizes)):
        if sizes[i][0] < sizes[i][1]:  # 가로보다 세로가 더 길면 
            sizes[i][0], sizes[i][1] = sizes[i][1], sizes[i][0]
    
    for size in sizes:
        w, h = size[0], size[1]
        if w > max_w:
            max_w = w 
        if h > max_h:
            max_h = h 
    return max_w * max_h
            
            
    def solution(sizes):
    answer = 0
    sizes = [sorted(size, reverse=True) for size in sizes]
    # width, height 별로 
    widths = [size[0] for size in sizes] 
    heights = [size[1] for size in sizes]  
    
    width, height = max(widths), max(heights)    
    answer = width * height 
    return answer
   

            
    

            
   출처 : https://velog.io/@tyjk8997/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-Lv1-%EC%B5%9C%EC%86%8C%EC%A7%81%EC%82%AC%EA%B0%81%ED%98%95
   https://somjang.tistory.com/entry/Programmers-%EC%9C%84%ED%81%B4%EB%A6%AC-%EC%B1%8C%EB%A6%B0%EC%A7%80-8%EC%A3%BC%EC%B0%A8-%EC%B5%9C%EC%86%8C%EC%A7%81%EC%82%AC%EA%B0%81%ED%98%95-Python
            
        
        
        
        
    
            
        
            
            
  
