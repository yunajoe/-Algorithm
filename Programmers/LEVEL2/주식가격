def solution(prices):
    queue  = [0] * len(prices)  # first in first out 
    idx = 0
    while prices:
        for i in range(1,len(prices)):
            if prices[0] <= prices[i]:
                queue[idx] += 1
        prices.pop(0)
        idx += 1
    return queue
    
# 실패

def solution(prices):
    queue  = [0] * len(prices)  # first in first out 
    idx = 0
    while prices:
        for i in range(1,len(prices)):
            if prices[0] <= prices[i]:
                queue[idx] += 1
            else:
                queue[idx] += 1
                break
        prices.pop(0)
        idx += 1
    return queue
    
정확성: 66.7
효율성: 0.0
합계: 66.7 / 100.0



from collections import deque

def solution(prices):
    queue = deque(prices)
    answer = []
    while queue:
        price = queue.popleft()
        sec = 0
        for q in queue:
            sec += 1
            if price > q: # 
                break
        answer.append(sec)
    return answer
